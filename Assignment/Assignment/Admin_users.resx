<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAElFTkSuQmCC
</value>
  </data>
</root>